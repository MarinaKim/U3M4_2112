#include<stdio.h>
#include<locale.h>
#include<iostream>
#include<stdint.h>
#include<time.h>

using namespace std;
int main()

{
	setlocale(LC_ALL, "Russian");
	int k;
	srand(time(NULL));
	do
	{
		cout << "введите номер задания:";
		cin >> k;
		switch (k) {
			//1.	Для заданного n в одном цикле вычислить n! и n2.
		case 1: {
			int i, n, n1, n2 = 1;
			cout << "Введите число n:";
			cin >> n;
			n1 = n*n;
			cout << "квадрат числа:" << n1 << endl;

			for (i = 1; i <= n; i++)
			{
				n2 *= n;

			}
			cout << "n!: " << n2 << endl;
		}break;

			//2.	Задано натуральные числа от 10 до N. Найти наибольшую цифру целого десятичного числа.
		case 2: {
			int i, n;
			cout << "Введите число n:";
			cin >> n;

			for (i = 10; i <= n - 1; i++)
			{
				for (int j = i + 1; j <= n - 1; j++)
				{
					if (i < (i + 1))
					{
						i = i + 1;
					}
				}
			}
			cout << i << endl;
		}break;

			//3.	Задано натуральные числа от 10 до N. Для натурального числа найти первую цифру и сумму его цифр.
		case 3: {
			int n, x1, x2, S, chislo;
			cout << "Введите число n>10:";
			cin >> n;

			chislo = 10 + rand() % n;
			cout << "число: " << chislo << endl;

			x1 = chislo / 10;
			x2 = chislo % 10;
			S = x1 + x2;

			cout << "первая цифра числа: " << x1 << endl;
			cout << "Сумма цифр числа: " << S << endl;

		}break;

			//4.	Определить, является ли целое число симметричным, т. е. таким числом, которое одинаково читается слева направо и 
			//справа налево (палиндром, перевертыш). Например, числа 123321, 202, 9889, 5555.
		case 4: {
			int a, x1, x2, x3, x4, x, x0;
			a = 1000 + rand() % 9999;
			cout << "число: " << a << endl;

			x1 = a / 1000;
			x2 = (a - x1 * 1000) / 100;
			x3 = (a - x1 * 1000 - x2 * 100) / 10;
			x4 = a - x1 * 1000 - x2 * 100 - x3 * 10;
			for (int i = 1; i <= 2; i++)
			{
				switch (i)
				{
				case 1:
					x = x1;
				case 2:
					x = x2;
				}
				for (int j = i + 3; j >= 3; j--)
					switch (j)
					{
					case 4:
						x0 = x4;
					case 3:
						x0 = x3;
					}

			}
			if (x == x0)
			{
				cout << "Число " << a << "полиндром" << endl;
			}
			else
			{
				cout << "Число " << a << "не является полиндромом" << endl;
			}
		}break;

			//5.	Вывести сумму квадратов чисел от 12 до 80 по 1- числу в строке.
		case 5: {
			int k = 0, j, x1, x2, x3, x4, x5, x6;
			for (int i = 12; i <= 80; i++)
			{
				j = i*i;
				k += j;

			}
			cout << "сумма квадратов: " << k << endl;
			x1 = k / 100000;
			x2 = (k - x1 * 100000) / 10000;
			x3 = (k - x1 * 100000 - x2 * 10000) / 1000;
			x4 = (k - x1 * 100000 - x2 * 10000 - x3 * 1000) / 100;
			x5 = (k - x1 * 100000 - x2 * 10000 - x3 * 1000 - x4 * 100) / 10;
			x6 = k - x1 * 100000 - x2 * 10000 - x3 * 1000 - x4 * 100 - x5 * 10;
			cout << x1 << endl;
			cout << x2 << endl;
			cout << x3 << endl;
			cout << x4 << endl;
			cout << x5 << endl;
			cout << x6 << endl;
		}break;

			//6.	Вывести разность квадратов чисел от 22 до 88 по 1- числу в строке.
		case 6: {
			int k1, k = 0, j, x1, x2, x3, x4, x5, x6;
			for (int i = 22; i <= 88; i++)
			{
				j = i*i;
				k -= j;
			}
			cout << "разность квадратов: " << k << endl;
			k1 = k*(-1);
			x1 = k1 / 100000;
			x2 = (k1 - x1 * 100000) / 10000;
			x3 = (k1 - x1 * 100000 - x2 * 10000) / 1000;
			x4 = (k1 - x1 * 100000 - x2 * 10000 - x3 * 1000) / 100;
			x5 = (k1 - x1 * 100000 - x2 * 10000 - x3 * 1000 - x4 * 100) / 10;
			x6 = k1 - x1 * 100000 - x2 * 10000 - x3 * 1000 - x4 * 100 - x5 * 10;
			cout << "-" << endl;
			cout << x1 << endl;
			cout << x2 << endl;
			cout << x3 << endl;
			cout << x4 << endl;
			cout << x5 << endl;
			cout << x6 << endl;
		}break;

			//7.	Дано вещественное число A и натуральные числа от 1 до N (> 0).
						//Найти разности квадратов A и натуральных чисел N .   
		case 7: {
			int n, i, i1, s = 0;
			float a, R;
			cout << "Введите вещественное число a: ";
			cin >> a;
			cout << "введите число n>0: ";
			cin >> n;
			for (i = 1; i <= n; i++)
			{
				i1 = i*i;
				s += i1;
			}
			R = a - s;
			cout << "Разность:" << R << endl;

		}break;

			//8.	Задано натуральные числа от 10 до N.
			//Найти наименьшую цифру целого десятичного числа.
		case 8: {
			int n, i, x1, x2, x3, x4;
			cout << "введите число n<=999, без повторяющихся цифр: ";
			cin >> n;
			for (i = 1000; i >= 10; i = i / 10)
			{
				k = n / i;

				if ((k != 0) && (i == 100))
				{
					cout << "Число 3-значное." << endl;
					x1 = n / i;
					x2 = (n - x1*i) / (i / 10);
					x3 = (n - x1*i - x2*(i / 10)) / (i / 100);
					if (((x1 < x2) && (x2 < x3)) || ((x1 < x3) && (x3 < x2)))
						cout << x1 << " Наименьшая цифра в числе: " << n << endl;
					else if (((x2 < x1) && (x1 < x3)) || ((x2 < x3) && (x3 < x1)))
						cout << x2 << " Наименьшая цифра в числе: " << n << endl;
					else if (((x3 < x1) && (x1 < x2)) || ((x3 < x2) && (x2 < x1)))
						cout << x3 << " Наименьшая цифра в числе: " << n << endl;
					break;
				}

				else if ((k != 0) && (i == 10))
				{
					cout << "Число 2-значное." << endl;
					x1 = n / i;
					x2 = (n - x1*i) / (i / 10);
					if (x1 < x2)
						cout << x1 << " Наименьшая цифра в числе: " << n << endl;
					else
						cout << x2 << " Наименьшая цифра в числе: " << n << endl;
					break;
				}

			}

		}break;

			//9.	Известно количество очков, набранных каждой из 20-ти команд-участниц первенства по футболу. 
			//Перечень очков дан в порядке убывания (ни одна пара команд не набрала одинаковое количество очков). 
			//Определить, какое место заняла команда, набравшая N очков (естественно, что значение N имеется  в перечне). 
			//Условный оператор не использовать.

		case 9: {
			int j,n;
			for (int i = 1; i <= 20; i++)
			{
				j = 21 - i;
				cout << i << " место " << j << " баллов" << endl;
			}

			cout << "Введите кол-во очков n(1-20):";
			cin >> n;
			for (j = 20; j >= 1; j--)
			{
				switch (j)
				{
				case 20: {
					if (n == j)
						cout << " 1 место" << endl;
				}break;
				case 19: {
					if (n == j)
						cout << " 2 место" << endl;
				}break;
				case 18: {
					if (n == j)
						cout << "3 место" << endl;
				}break;
				case 17: {
					if (n == j)
						cout << " 4 место" << endl;
				}break;
				case 16: {
					if (n == j)
						cout <<"5 место" << endl;
				}break;
				case 15: {
					if (n == j)
						cout << "6 место" << endl;
				}break;
				case 14: {
					if (n == j)
						cout <<  "7 место" << endl;
				}break;
				case 13: {
					if (n == j)
						cout <<  "8 место" << endl;
				}break;
				case 12: {
					if (n == j)
						cout <<  "9 место" << endl;
				}break;
				case 11: {
					if (n == j)
						cout <<  "10 место" << endl;
				}break;
				case 10: {
					if (n == j)
						cout <<  "11 место" << endl;
				}break;
				case 9: {
					if (n == j)
						cout <<  "12 место" << endl;
				}break;
				case 8: {
					if (n == j)
						cout <<  "13 место" << endl;
				}break;
				case 7: {
					if (n == j)
						cout << "14 место" << endl;
				}break;
				case 6: {
					if (n == j)
						cout << "15 место" << endl;
				}break;
				case 5: {
					if (n == j)
						cout <<"16 место" << endl;
				}break;
				case 4: {
					if (n == j)
						cout << "17 место" << endl;
				}break;
				case 3: {
					if (n == j)
						cout << "18 место" << endl;
				}break;
				case 2: {
					if (n == j)
						cout <<  "19 место" << endl;
				}break;
				case 1: {
					if (n == j)
						cout << "20 место" << endl;
				}break;

				}
			}
		}break;

			//10.	Дано натуральное число  n (n<9999). Найти предпоследнюю цифру числа (в предположении, что n>10).
		case 10: {
			int x1, x2, x3;
			int n = 10 + rand() % 9999;
			cout << "число: " << n << endl;

			if (n / 1000 != 0)
			{
				cout << "число 4-х значное." << endl;
				x1 = n / 1000;
				x2 = (n - x1 * 1000) / 100;
				x3 = (n - x1 * 1000 - x2 * 100) / 10;
				cout << "предпоследняя цифра: " << x3 << endl;
			}
			else if (n / 100 != 0)
			{
				cout << "число 3-х значное." << endl;
				x1 = n / 100;
				x2 = (n - x1 * 100) / 10;
				cout << "предпоследняя цифра: " << x2 << endl;
			}
			else if (n / 10 != 0)
			{
				cout << "число 2-значное." << endl;
				x1 = n / 10;
				cout << "предпоследняя цифра: " << x1 << endl;
			}

		}break;

			//11.	Даны числа от 1 до 1000 и число m. Вывести все остатки от деления четных сотен на число m.
		case 11: {
			int i, m, k, l;
			cout << "Введите число m: ";
			cin >> m;
			for (i = 1; i < 1000; i++)
			{
				k = i / 100;
				if ((k != 0) && (k % 2 == 0) && (i % 100 == 0))
				{
					l = i%m;
					cout << "остаток от деления числа " << i << " на " << m << " составляет: " << l << endl;
				}
			}
		}break;
		}
	} while (k >= 0);
}
